name: juice-shop-short-build
on: workflow_dispatch

permissions:
    actions: read # for detecting the Github Actions environment.
    id-token: write # for creating OIDC tokens for signing.
    packages: write # for uploading attestations.
    contents: read

env:
    OIDC_PROVIDER_NAME: ${{ vars.OIDC_PROVIDER_NAME }}
    DOCKER_REPO: ${{ vars.DOCKER_REPO }}
    DOCKER_REMOTE: ${{ vars.DOCKER_REMOTE }}
    IMAGE_NAME: '${{ vars.IMAGE_NAME }}:${{ github.run_number }}'
    JF_URL: https://${{ vars.JF_URL }}/
    JF_BUILD_NAME: 'juice-shop-short-build'
    JF_BUILD_NUMBER: ${{ github.run_number }}

jobs:
    build-publish-python:
        name: juice-shop-short-build
        runs-on: juice-shop-self-hosted
        steps:
            # Use the specific setup-cli branch
            - name: Setup JFrog CLI
              uses: jfrog/setup-jfrog-cli@v4
              id: setup-cli
              env:
                    JF_URL: https://${{ vars.JF_URL }}/
                    JF_PROJECT: ${{ vars.JF_PROJECT }}
              with:
                    oidc-provider-name: ${{ env.OIDC_PROVIDER_NAME }}

            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Authenticate Docker
              uses: docker/login-action@v3
              with:
                    registry: ${{ vars.JF_URL }}
                    username: ${{ steps.setup-cli.outputs.oidc-user }}
                    password: ${{ steps.setup-cli.outputs.oidc-token }}

            - name: Build Docker image
              uses: docker/build-push-action@v5
              id: build
              with:
                    file: Dockerfile_test
                    build-args: |
                        JF_URL=${{ vars.JF_URL }}
                        JF_PROJECT=${{ vars.JF_PROJECT }}
                        JF_USER=${{ steps.setup-cli.outputs.oidc-user }}
                        JF_PASSWORD=${{ steps.setup-cli.outputs.oidc-token }}
                        DOCKER_REPO=${{ env.DOCKER_REPO }}
                        DOCKER_REMOTE=${{ env.DOCKER_REMOTE }}
                    push: true
                    context: .
                    platforms: linux/amd64, linux/arm64
                    tags: ${{ vars.JF_URL }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
                    provenance: false

            - name: Add dependencies
              run: |
                jf rt build-add-dependencies ${{ env.JF_BUILD_NAME }} ${{ env.JF_BUILD_NUMBER }} --from-rt ${{ env.DOCKER_REPO }}/${{ vars.IMAGE_NAME }}/${{ github.run_number }}/
            
            - name: Add git to build
              run: |
                jf rt build-add-git ${{ env.JF_BUILD_NAME }} ${{ env.JF_BUILD_NUMBER }} .

            - name: Publish Build
              run: |
                jf rt build-publish ${{ env.JF_BUILD_NAME }} ${{ env.JF_BUILD_NUMBER }}
                
            - name: Build Scan
              run: |
                jf build-scan ${{ env.JF_BUILD_NAME }} ${{ env.JF_BUILD_NUMBER }} --fail=false